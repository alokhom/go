---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-redis-config
  namespace: tyk
data:
  maxmemory : 2mb
# ---
# # Redis Insight service with name 'redisinsight-service'
# apiVersion: v1
# kind: Service
# metadata:
#   name: redis       # name should not be 'redisinsight'
#   namespace: tyk
# # since the service creates
# # environment variables that
# # conflicts with redisinsight
# # application's environment
# # variables `RI_APP_HOST` and
# # `RI_APP_PORT`
# spec:
#   type: ClusterIP
#   ports:
#     - port: 6379
#       targetPort: 6379
#   selector:
#     app: redis
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: redis
#   namespace: tyk
#   labels:
#     app: redis
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: redis
#   template:
#     metadata:
#       labels:
#        app: redis
#     spec:
#       containers:
#       - env:
#         - name: REDIS_PASSWORD
#           value: "redispassword"  # Set a strong password for Redis
#         name: redis-container
#         image: redis:7.2.9-alpine
#         ports:
#           - containerPort: 6379
#         resources:
#           requests:
#             cpu: "1m"
#         volumeMounts:
#           - name: data
#             mountPath: /redis-master-data
#           - name: redis-config
#             mountPath: /redis-master
#       volumes:
#       - name: redis-config
#         configMap:
#            name: my-redis-config
#       - name: data
#         emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: tyk
  labels:
    app: redis
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis-cluster
    role: master
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis
  namespace: tyk
data:
  master.conf: |
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    maxmemory 2mb
  slave.conf: |
    slaveof redis-0.redis 6379
    maxmemory 2mb
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: conf
#   namespace: tyk
#   labels:
#     app: redis-cluster
# data:
#   redis.conf: |+
#     cluster-enabled yes
#     cluster-require-full-coverage no
#     cluster-node-timeout 15000
#     cluster-config-file /data/nodes.conf
#     cluster-migration-barrier 1
#     appendonly yes
#     protected-mode no
#     maxmemory 2mb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cluster-1
  namespace: tyk
  labels:
    app: redis-cluster
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cluster
      role: master
  template:
    metadata:
      labels:
        app: redis-cluster
        role: master
    spec:
      containers:
      - name: redis
        image: redis:7.2.1
        command:
        - bash
        - "-c"
        - |
          set -ex
          cp /mnt/config-map/master.conf /etc/redis.conf
          redis-server /etc/redis.conf
        env:
        - name: REDIS_PASSWORD
          value: "redispassword"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: data
          mountPath: /data
        - name: conf
          mountPath: /etc/
          subPath: redis.conf
        - name: config-map
          mountPath: /mnt/config-map
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 20
          periodSeconds: 3
      volumes:
      - name: config-map
        configMap:
          name: redis
          defaultMode: 0755
      - name: conf
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data
  namespace: tyk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: do-block-storage

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: redis-cluster-2
#   namespace: tyk
#   labels:
#     app: redis-cluster
#     role: slave
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: redis-cluster
#       role: slave
#   template:
#     metadata:
#       labels:
#         app: redis-cluster
#         role: slave
#     spec:
#       initContainers:
#       - name: init-redis
#         image: redis:7.2.1
#         command:
#         - bash
#         - "-c"
#         - |
#           set -ex
#           cp /mnt/config-map/slave.conf /etc/redis.conf
#         volumeMounts:
#         # - name: conf
#         #   mountPath: /etc
#         #   subPath: redis.conf
#         - name: config-map
#           mountPath: /mnt/config-map
#       containers:
#       - name: redis
#         image: redis:7.2.1
#         command: ["redis-server"]
#         args: ["/etc/redis.conf"]
#         env:
#         - name: REDIS_PASSWORD
#           value: "redispassword"
#         - name: POD_IP
#           valueFrom:
#             fieldRef:
#               fieldPath: status.podIP
#         ports:
#         - name: redis
#           containerPort: 6379
#         volumeMounts:
#         - name: data
#           mountPath: /data
#         - name: conf
#           mountPath: /etc/
#           subPath: redis.conf
#       # containers:
#       # - name: redis
#       #   image: redis:5.0-rc
#         readinessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - "redis-cli -h $(hostname) ping"
#           initialDelaySeconds: 15
#           timeoutSeconds: 5
#         livenessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - "redis-cli -h $(hostname) ping"
#           initialDelaySeconds: 20
#           periodSeconds: 3
#       #   volumeMounts:
#       #   - name: conf
#       #     mountPath: /conf
#       #     readOnly: false
#       #   - name: data
#       #     mountPath: /data
#       #     readOnly: false
#       volumes:
#       - name: config-map
#         configMap:
#           name: redis
#           defaultMode: 0755
#       # - name: conf
#       #   configMap:
#       #     name: conf
#       #     defaultMode: 0755
#   volumeClaimTemplates:
#   - metadata:
#       name: data
#       labels:
#         name: redis-cluster
#     spec:
#       storageClassName: default
#       accessModes:
#         - ReadWriteOnce
#       resources:
#         requests:
#           storage: 100Mi